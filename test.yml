openapi: 3.0.2
info:
  title: Petstore API
  version: 1.0.0
  description: |
    A sample API that uses a petstore as an example to demonstrate features
    in the OpenAPI 3.0 specification and Microcks.
  contact:
    name: Microcks Team
    url: 'https://microcks.io'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /my/pets:
    get:
      summary: Get a list of pets
      operationId: getMyPets
      responses:
        '200':
          description: A list of pets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
              examples:
                my_pets:
                  value:
                    - id: 1
                      name: Zaza
                    - id: 2
                      name: Tigress
                    - id: 3
                      name: Maki
                    - id: 4
                      name: Toufik

  /pets:
    get:
      summary: Get pets with optional filtering
      operationId: getFilteredPets
      parameters:
        - name: filter
          in: query
          description: Filter pets by name substring
          schema:
            type: string
          examples:
            k_pets:
              value: k
      responses:
        '200':
          description: Filtered list of pets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
              examples:
                k_pets:
                  value:
                    - id: 3
                      name: Maki
                    - id: 4
                      name: Toufik

  /pets/{id}:
    get:
      summary: Get a pet by ID
      operationId: getPetById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the pet to retrieve
          schema:
            type: string
          examples:
            pet_1:
              value: '1'
            pet_2:
              value: '2'
      responses:
        '200':
          description: Details of a pet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
              examples:
                pet_1:
                  value:
                    id: 1
                    name: Zaza
                pet_2:
                  value:
                    id: 2
                    name: Tigress

components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name
